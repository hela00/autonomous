<launch>
  <param name="use_sim_time" value="true" />
  
  <!-- Transformation Configuration -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui"
    type="joint_state_publisher_gui" />

  <!-- Start Gazebo with specified world -->
  <include file="$(find urdf_robot)/launch/gazebo.launch" />
  
   
    <node pkg="controller_manager" type="spawner" name="skid_steer_controller_spawner" args="skid_steer_drive_controller" />

    <!-- Start Joint State Controller -->
    <node pkg="controller_manager" type="spawner" name="joint_state_controller_spawner" args="joint_state_controller" />
  
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" output="screen">
      <param name="use_sim_time" value="true"/>
      <param name="config" value="$(find urdf_robot)/param/ekf.yaml"/>
    </node>
  
    
  <!-- Start AMCL -->
  <include file="$(find urdf_robot)/launch/amcl.launch" />
 

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" output="screen">
    <param name="config" value="$(find urdf_robot)/param/ekf.yaml"/>
  </node>

  <arg name="open_rviz" default="true" />
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
      args="-d $(find urdf_robot)/config/nav.rviz" />
  </group>

  <include file="$(find route_admin_panel)/launch/panel.launch" />
  <include file="$(find object_detection)/launch/object_detection.launch" />

</launch>
